# Sentinel GRC Environment Configuration
# Copy this to .env and update values for your environment

# Application Settings
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# Security Configuration (REQUIRED FOR PRODUCTION)
SECRET_KEY=change-this-to-a-strong-secret-key-in-production-min-32-chars
JWT_SECRET_KEY=change-this-to-a-strong-jwt-secret-key-in-production-min-32-chars
API_SECRET_KEY=sentinel-grc-demo-key-change-in-production

# API Keys (Optional - for LLM integrations)
GROQ_API_KEY=
OPENAI_API_KEY=
ANTHROPIC_API_KEY=

# Database Configuration
DATABASE_URL=postgresql://localhost:5432/sentinel_grc
DB_HOST=localhost
DB_PORT=5432
DB_NAME=sentinel_grc
DB_USERNAME=sentinel_user
DB_PASSWORD=

# Redis Configuration (Optional - for caching)
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# Neo4j Configuration (Optional - for knowledge graphs)
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=

# Application Configuration
CACHE_TTL_SECONDS=3600
MAX_AGENT_RETRIES=3
AGENT_TIMEOUT_SECONDS=30
PARALLEL_AGENT_LIMIT=10

# API Server Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_KEY_HEADER=X-API-Key

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=10

# Cloud Provider Configuration (Optional)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1

# Monitoring and Analytics (Optional)
SENTRY_DSN=
DATADOG_API_KEY=

# Production-specific settings
CORS_ORIGINS=http://localhost:3000,http://localhost:8000
ALLOWED_HOSTS=localhost,127.0.0.1
SECURE_SSL_REDIRECT=false
SECURE_SSL_HOST=
SECURE_HSTS_SECONDS=31536000