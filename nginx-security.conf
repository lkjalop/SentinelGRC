
# Nginx configuration for Sentinel GRC with security headers
server {
    listen 80;
    listen 443 ssl http2;
    server_name sentinelgrc.com www.sentinelgrc.com;
    
    # SSL configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/sentinelgrc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sentinelgrc.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header "Content-Security-Policy" "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net; img-src 'self' data: https:; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://api.groq.com https://*.supabase.co wss://*.supabase.co https://cdn.jsdelivr.net; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; block-all-mixed-content; upgrade-insecure-requests; report-uri /api/csp-report" always;
    add_header "X-Content-Type-Options" "nosniff" always;
    add_header "X-Frame-Options" "DENY" always;
    add_header "X-XSS-Protection" "1; mode=block" always;
    add_header "Referrer-Policy" "strict-origin-when-cross-origin" always;
    add_header "Permissions-Policy" "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=()" always;
    add_header "Strict-Transport-Security" "max-age=31536000; includeSubDomains; preload" always;
    add_header "Cache-Control" "no-store, no-cache, must-revalidate, max-age=0" always;
    add_header "Pragma" "no-cache" always;
    add_header "Expires" "0" always;

    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;
    
    # Main application
    location / {
        limit_req zone=general burst=20 nodelay;
        proxy_pass http://127.0.0.1:8501;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }
    
    # API endpoints with stricter rate limiting
    location /api/ {
        limit_req zone=api burst=5 nodelay;
        proxy_pass http://127.0.0.1:8501;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # CSP violation reporting
    location /api/csp-report {
        limit_req zone=api burst=10 nodelay;
        proxy_pass http://127.0.0.1:8501;
        proxy_set_header Content-Type application/csp-report;
    }
    
    # Block common attack paths
    location ~ ^/(admin|phpmyadmin|wp-admin|wp-login) {
        return 444;
    }
    
    # Redirect HTTP to HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}
